{"version":3,"mappings":"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","names":["AddBookModalComponent","navParams","modalController","angularFirestore","bookshelfId","get","customPickerOptions","buttons","text","handler","console","log","data","changePublishDate","title","target","value","authors","publishers","publishDate","numberOfPages","name","isbn","close","dismiss","collection","add","bookShelfId","publish_date","number_of_pages","cover","createdAt","Date","then","_capacitor_toast__WEBPACK_IMPORTED_MODULE_2__","err","_ionic_angular__WEBPACK_IMPORTED_MODULE_4__","_angular_fire_firestore__WEBPACK_IMPORTED_MODULE_5__","selector","template","FirestoreService","afAuth","afStore","onAuthStateChanged","user","currentUser","book","_angular_fire_auth__WEBPACK_IMPORTED_MODULE_0__","_angular_fire_firestore__WEBPACK_IMPORTED_MODULE_1__","providedIn","__webpack_exports__"],"sources":["webpack:///src/app/pages/bookshelf/add-book-modal/add-book-modal.component.ts","webpack:///src/app/services/firestore.service.ts","webpack:///src/app/pages/bookshelf/add-book-modal/add-book-modal.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { AngularFirestore } from \"@angular/fire/firestore\";\nimport { ModalController, NavParams } from \"@ionic/angular\";\nimport { Toast } from \"@capacitor/toast\";\n\n@Component({\n  selector: \"app-add-book-modal\",\n  templateUrl: \"./add-book-modal.component.html\",\n  styleUrls: [\"./add-book-modal.component.scss\"],\n})\nexport class AddBookModalComponent implements OnInit {\n  public bookshelfId;\n  public title: string;\n  public authors: string;\n  public publishers: string;\n  public publishDate: Date;\n  public numberOfPages: number;\n  public isbn: string;\n  public cover: string;\n  public customPickerOptions: any;\n\n  constructor(\n    public navParams: NavParams,\n    public modalController: ModalController,\n    private angularFirestore: AngularFirestore\n  ) {\n    this.bookshelfId = this.navParams.get(\"bookShelfId\");\n  }\n\n  ngOnInit() {\n    this.customPickerOptions = {\n      buttons: [\n        {\n          text: \"Cancel\",\n          handler: () => {\n            console.log(\"Clicked Log. Do not Dismiss.\");\n            return false;\n          },\n        },\n        {\n          text: \"Save\",\n          handler: (data) => {\n            console.log(data);\n            this.changePublishDate(data);\n          },\n        },\n      ],\n    };\n  }\n\n  public changeTitle(title: any): void {\n    this.title = title.target.value;\n  }\n\n  public changeAuthors(authors: any): void {\n    this.authors = authors.target.value;\n  }\n\n  public changePublishers(publishers: any): void {\n    this.publishers = publishers.target.value;\n  }\n\n  public changePublishDate(publishDate: any): void {\n    this.publishDate = publishDate.target.value;\n  }\n\n  public changeNumberOfPages(numberOfPages: any): void {\n    this.numberOfPages = numberOfPages.target.value;\n  }\n\n  public changeIsbn(name: any): void {\n    this.isbn = name.target.value;\n  }\n\n  async closeModal() {\n    const close = \"Modal Removed\";\n    await this.modalController.dismiss(close);\n  }\n\n  save() {\n    this.angularFirestore\n      .collection(\"books\")\n      .add({\n        bookShelfId: this.bookshelfId,\n        title: this.title,\n        authors: this.authors,\n        publishers: this.publishers,\n        publish_date: this.publishDate,\n        number_of_pages: this.numberOfPages,\n        cover: \"./assets/icon/bookCard.svg\",\n        isbn: this.isbn,\n        createdAt: new Date(),\n      })\n      .then(async () => {\n        const close = \"Modal Removed\";\n        Toast.show({\n          text: \"Book was successfully added to your bookshelf!\",\n        });\n        await this.modalController.dismiss(close);\n      })\n      .catch((err) => console.log(err));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport {\n  AngularFirestore,\n  AngularFirestoreDocument,\n  AngularFirestoreCollection,\n} from '@angular/fire/firestore';\nimport firebase from 'firebase/app';\n\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport interface Users {\n  uid: string;\n  displayName: string;\n}\n\nexport interface Bookshelf {\n  id: string;\n  userId: string;\n  name: string;\n}\n\nexport interface Book {\n  id?: string;\n  authors?: string;\n  cover?: string;\n  isbn?: string;\n  number_of_pages?: string;\n  publish_date?: string;\n  publishers?: string;\n  title?: string;\n  bookShelfId: string;\n  createdAt: Date;\n}\n\nexport interface Stars {\n  booksID: string;\n  userID: string;\n  text: string;\n  rating: number;\n  createdAt: firebase.firestore.FieldValue;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FirestoreService {\n  currentUser: Users = null;\n  currentReview: Stars = null;\n  usersCollection: AngularFirestoreCollection<Users>;\n  users: Observable<Users[]>;\n\n  constructor(\n    public afAuth: AngularFireAuth,\n    public afStore: AngularFirestore\n  ) {\n    this.afAuth.onAuthStateChanged((user) => {\n      this.currentUser = user;\n    });\n  }\n\n  // getBooks() {\n  //   this.afStore\n  //     .collection('books')\n  //     .get()\n  //     .forEach((el) => {\n  //       console.log(el);\n  //     });\n  // }\n\n  // Asta functioneaza, daca tu ai alta modalitate, poti sa o modifici schimbi\n  addBook(book: Book) {\n    return this.afStore.collection('books').add({\n      authors: book.authors,\n      cover: book.cover,\n      isbn: book.isbn,\n      number_of_pages: book.number_of_pages,\n      publish_date: book.publish_date,\n      publishers: book.publishers,\n      title: book.title,\n      bookShelfId: book.bookShelfId,\n      createdAt: book.createdAt\n    });\n  }\n}\n","export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <ion-title class=\\\"ion-text-center\\\">Add a book</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"closeModal()\\\" class=\\\"button-text\\\">Close</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list style=\\\"height: 100%; width: 100%\\\" lines=\\\"none\\\">\\n    <ion-item style=\\\"margin-bottom: 20px\\\">\\n      <ion-label class=\\\"ion-text-center book-title\\\"\\n        >Enter information</ion-label\\n      >\\n    </ion-item>\\n    <ion-item style=\\\"margin-bottom: 10px\\\">\\n      <ion-label class=\\\"label-text\\\">Title:</ion-label>\\n      <ion-input\\n        (ionChange)=\\\"changeTitle($event)\\\"\\n        class=\\\"review-text\\\"\\n      ></ion-input>\\n    </ion-item>\\n    <ion-item style=\\\"margin-bottom: 10px\\\">\\n      <ion-label class=\\\"label-text\\\">Authors:</ion-label>\\n      <ion-input\\n        (ionChange)=\\\"changeAuthors($event)\\\"\\n        class=\\\"review-text\\\"\\n      ></ion-input>\\n    </ion-item>\\n    <ion-item style=\\\"margin-bottom: 10px\\\">\\n      <ion-label class=\\\"label-text\\\">Publishers:</ion-label>\\n      <ion-input\\n        (ionChange)=\\\"changePublishers($event)\\\"\\n        class=\\\"review-text\\\"\\n      ></ion-input>\\n    </ion-item>\\n    <ion-item style=\\\"margin-bottom: 10px\\\">\\n      <ion-label class=\\\"label-text\\\">Publish date:</ion-label>\\n      <ion-input\\n        (ionChange)=\\\"changePublishDate($event)\\\"\\n        class=\\\"review-text\\\"\\n      ></ion-input>\\n    </ion-item>\\n    <ion-item style=\\\"margin-bottom: 10px\\\">\\n      <ion-label class=\\\"label-text\\\">Number of pages:</ion-label>\\n      <ion-input\\n        (ionChange)=\\\"changeNumberOfPages($event)\\\"\\n        class=\\\"review-text\\\"\\n      ></ion-input>\\n    </ion-item>\\n    <ion-item style=\\\"margin-bottom: 10px\\\">\\n      <ion-label class=\\\"label-text\\\">ISBN:</ion-label>\\n      <ion-input\\n        (ionChange)=\\\"changeIsbn($event)\\\"\\n        class=\\\"review-text\\\"\\n      ></ion-input>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n<ion-footer>\\n  <ion-toolbar style=\\\"--background: rgba(var(--ion-color-success-rgb), 0.7)\\\">\\n    <ion-button expand=\\\"block\\\" fill=\\\"clear\\\" shape=\\\"round\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"button-text\\\">Save book</span>\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-footer>\\n\";"]}