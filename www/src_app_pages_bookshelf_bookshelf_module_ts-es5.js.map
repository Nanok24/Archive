{"version":3,"mappings":"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","names":["AddBookshelfComponent","navParams","modalController","angularFirestore","userId","get","name","target","value","description","close","dismiss","collection","add","createdAt","Date","then","console","log","err","_ionic_angular__WEBPACK_IMPORTED_MODULE_3__","_angular_fire_firestore__WEBPACK_IMPORTED_MODULE_4__","_angular_core__WEBPACK_IMPORTED_MODULE_5__","selector","template","BookshelfBookListComponent","authService","afs","afAuth","route","bookShelfId","snapshot","paramMap","authState","subscribe","user","uid","displayName","localStorage","getItem","snapshotChanges","books","map","t","Object","id","payload","doc","data","filter","sort","a","b","getTime","book","create","component","_review_modal_review_modal_page__WEBPACK_IMPORTED_MODULE_4__","cssClass","componentProps","bookTitle","title","bookAuthors","authors","bookId","cover","modal","present","_services_authentication_service__WEBPACK_IMPORTED_MODULE_2__","_ionic_angular__WEBPACK_IMPORTED_MODULE_6__","_services_firestore_service__WEBPACK_IMPORTED_MODULE_3__","_angular_fire_auth__WEBPACK_IMPORTED_MODULE_7__","_angular_fire_firestore__WEBPACK_IMPORTED_MODULE_8__","_angular_router__WEBPACK_IMPORTED_MODULE_9__","routes","path","_bookshelf_page__WEBPACK_IMPORTED_MODULE_1__","_bookshelf_book_list_bookshelf_book_list_component__WEBPACK_IMPORTED_MODULE_0__","BookshelfPageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_4__","exports","BookshelfPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_7__","_angular_forms__WEBPACK_IMPORTED_MODULE_8__","_ionic_angular__WEBPACK_IMPORTED_MODULE_9__","_bookshelf_routing_module__WEBPACK_IMPORTED_MODULE_3__","declarations","_bookshelf_page__WEBPACK_IMPORTED_MODULE_4__","_bookshelf_book_list_bookshelf_book_list_component__WEBPACK_IMPORTED_MODULE_2__","_add_bookshelf_add_bookshelf_component__WEBPACK_IMPORTED_MODULE_1__","_add_book_modal_add_book_modal_component__WEBPACK_IMPORTED_MODULE_0__","providers","BookshelfPage","router","navCtrl","JSON","parse","userData","booksShelves","navigate","navigateRoot","signOut","_add_bookshelf_add_bookshelf_component__WEBPACK_IMPORTED_MODULE_4__","src_app_services_authentication_service__WEBPACK_IMPORTED_MODULE_2__","src_app_services_firestore_service__WEBPACK_IMPORTED_MODULE_3__","__webpack_exports__"],"sources":["webpack:///src/app/pages/bookshelf/add-bookshelf/add-bookshelf.component.ts","webpack:///src/app/pages/bookshelf/bookshelf-book-list/bookshelf-book-list.component.ts","webpack:///src/app/pages/bookshelf/bookshelf-routing.module.ts","webpack:///src/app/pages/bookshelf/bookshelf.module.ts","webpack:///src/app/pages/bookshelf/bookshelf.page.ts","webpack:///src/app/pages/bookshelf/add-bookshelf/add-bookshelf.component.html","webpack:///src/app/pages/bookshelf/bookshelf-book-list/bookshelf-book-list.component.html","webpack:///src/app/pages/bookshelf/bookshelf.page.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { ModalController, NavParams } from '@ionic/angular';\n\n@Component({\n  selector: 'app-add-bookshelf',\n  templateUrl: './add-bookshelf.component.html',\n  styleUrls: ['./add-bookshelf.component.scss']\n})\nexport class AddBookshelfComponent implements OnInit {\n  @Input() bookTitle: string;\n\n  public name: string;\n  public description: string;\n  public bookAuthors: string;\n\n  private userId: any;\n\n  constructor(\n    public navParams: NavParams,\n    public modalController: ModalController,\n    private angularFirestore: AngularFirestore\n  ) {\n  }\n\n  ngOnInit() {\n    this.userId = this.navParams.get('userId');\n  }\n\n  public changeName(name: any): void {\n    this.name = name.target.value;\n  }\n\n  public changeDescription(description: any): void {\n    this.description = description.target.value;\n  }\n\n  public async closeModal(): Promise<void> {\n    const close = 'Modal Removed';\n    await this.modalController.dismiss(close);\n  }\n\n  async save() {\n    this.angularFirestore\n      .collection('bookshelfs')\n      .add({\n        name: this.name,\n        userId: this.userId,\n        createdAt: new Date()\n      })\n      .then(async() => {\n        const close = 'Modal Removed';\n        await this.modalController.dismiss(close);\n      })\n      .catch(err => console.log(err));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { ActivatedRoute } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { Book, FirestoreService, Users } from '../../../services/firestore.service';\nimport { ReviewModalPage } from '../../review-modal/review-modal.page';\n\n@Component({\n  selector: 'app-bookshelf-book-list',\n  templateUrl: './bookshelf-book-list.component.html',\n  styleUrls: ['./bookshelf-book-list.component.scss']\n})\nexport class BookshelfBookListComponent implements OnInit {\n  public displayName = null;\n  public uid = null;\n  public usersCollection: AngularFirestoreCollection<Users>;\n  public books: Book[] = [];\n\n  private readonly bookShelfId: string;\n\n  constructor(\n    public authService: AuthenticationService,\n    public modalController: ModalController,\n    public afs: FirestoreService,\n    public afAuth: AngularFireAuth,\n    private angularFirestore: AngularFirestore,\n    private route: ActivatedRoute\n  ) {\n    this.bookShelfId = this.route.snapshot.paramMap.get('id');\n\n    afAuth.authState.subscribe((user) => {\n      if(user) {\n        this.uid = user.uid;\n        this.displayName = localStorage.getItem('currentUserDisplayName');\n      }\n    });\n  }\n\n  // Aici e tot ce am incercat eu pe parcurs pentru afisare, ceva de aici functioneaza, dar nu cum imi doresc\n\n  ngOnInit() {\n    this.angularFirestore.collection('books').snapshotChanges().subscribe((books) => {\n      this.books = books.map((t) => ({\n        id: t.payload.doc.id,\n        ...t.payload.doc.data() as Book\n      })).filter(t => t.bookShelfId === this.bookShelfId).sort((a, b) => {\n        return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n      });\n    });\n    // this.user$ = this.afs.afStore\n    //   .collection('users', (ref) => ref.where('uid', '==', this.uid))\n    //   .valueChanges();\n  }\n\n  ionViewDidLoad() {\n\n  }\n\n  ionViewWillEnter() {\n    // this.user$ = this.afs.afStore\n    //   .collection('users', (ref) => ref.where('uid', '==', this.uid))\n    //   .valueChanges();\n    // this.books$ = this.afs.afStore.collection('books').valueChanges();\n    // this.docs$ = this.afs.afStore\n    //   .collection('bookshelfs', (ref) =>\n    //     ref.where('userID', '==', this.uid).orderBy('createdAt', 'desc')\n    //   )\n    //   .valueChanges();\n    // console.log(\n    //   '🚀 ~ file: bookshelf.page.ts ~ line 79 ~ BookshelfPage ~ ionViewWillEnter ~ docs$',\n    //   this.docs$\n    // );\n    // const testare = this.afs.afStore\n    //   .collection('bookshelfs', (ref) =>\n    //     ref.where('userID', '==', this.uid).orderBy('createdAt', 'desc')\n    //   )\n    //   .valueChanges();\n    // testare.forEach((el) => {\n    //   for (let index = 0; index < el.length; index++) {\n    //     console.log(el[index]);\n    //   }\n    //   console.log(el);\n    // });\n    // const queryObservable = this.test$.pipe(\n    //   switchMap((test) =>\n    //     this.afs.afStore\n    //       .collection('users', (ref) => ref.where('uid', '==', test))\n    //       .valueChanges()\n    //   )\n    // );\n    // queryObservable.subscribe((queriedItems) => {\n    //   console.log(queriedItems);\n    // });\n  }\n\n  async openModal(book: Book) {\n    const modal = await this.modalController.create({\n      component: ReviewModalPage,\n      cssClass: 'modalCss',\n      componentProps: {\n        bookTitle: book.title,\n        bookAuthors: book.authors,\n        userId: this.uid,\n        bookId: book.id,\n        cover: book.cover,\n        title: book.title\n      }\n    });\n\n    modal.present();\n  }\n\n  deleteBook(bookId: string): Promise<void> {\n    return this.angularFirestore.doc(`books/${bookId}`).delete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BookshelfBookListComponent } from './bookshelf-book-list/bookshelf-book-list.component';\n\nimport { BookshelfPage } from './bookshelf.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BookshelfPage\n  },\n  {\n    path: 'book-list/:id',\n    component: BookshelfBookListComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class BookshelfPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule, NavParams } from '@ionic/angular';\nimport { AddBookModalComponent } from './add-book-modal/add-book-modal.component';\nimport { AddBookshelfComponent } from './add-bookshelf/add-bookshelf.component';\nimport { BookshelfBookListComponent } from './bookshelf-book-list/bookshelf-book-list.component';\n\nimport { BookshelfPageRoutingModule } from './bookshelf-routing.module';\n\nimport { BookshelfPage } from './bookshelf.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    BookshelfPageRoutingModule\n  ],\n  declarations: [BookshelfPage, BookshelfBookListComponent, AddBookshelfComponent, AddBookModalComponent],\n  providers: [NavParams]\n})\nexport class BookshelfPageModule {}\n","import { Component } from \"@angular/core\";\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport { AngularFirestore } from \"@angular/fire/firestore\";\nimport { Router } from \"@angular/router\";\nimport { ModalController, NavController } from \"@ionic/angular\";\nimport firebase from \"firebase\";\nimport { AuthenticationService } from \"src/app/services/authentication.service\";\nimport {\n  Bookshelf,\n  FirestoreService,\n} from \"src/app/services/firestore.service\";\nimport { AddBookshelfComponent } from \"./add-bookshelf/add-bookshelf.component\";\nimport User = firebase.User;\n\n@Component({\n  selector: \"app-bookshelf\",\n  templateUrl: \"./bookshelf.page.html\",\n  styleUrls: [\"./bookshelf.page.scss\"],\n})\nexport class BookshelfPage {\n  public booksShelves: Bookshelf[] = [];\n  public userId: string;\n  public displayName: string;\n  public userData: any;\n\n  constructor(\n    public authService: AuthenticationService,\n    public modalController: ModalController,\n    public afs: FirestoreService,\n    public afAuth: AngularFireAuth,\n    private angularFirestore: AngularFirestore,\n    private router: Router,\n    private navCtrl: NavController\n  ) {}\n\n  ionViewWillEnter() {\n    const user = JSON.parse(localStorage.getItem(\"user\")) as User;\n\n    if (user) {\n      this.userData = user;\n      this.userId = user.uid;\n      this.displayName = localStorage.getItem(\"currentUserDisplayName\");\n      this.angularFirestore\n        .collection(\"bookshelfs\")\n        .snapshotChanges()\n        .subscribe((books) => {\n          this.booksShelves = books\n            .map((t) => ({\n              id: t.payload.doc.id,\n              ...(t.payload.doc.data() as Bookshelf),\n            }))\n            .map(\n              (book) =>\n                ({\n                  id: book.id,\n                  userId: book.userId,\n                  name: book.name,\n                } as Bookshelf)\n            )\n            .filter((t) => t.userId === this.userId);\n        });\n    }\n  }\n\n  public async goToBookList(bookShelfId: number) {\n    await this.router.navigate([\"book-list\", bookShelfId]);\n  }\n\n  public async signOut(): Promise<void> {\n    await this.navCtrl.navigateRoot(\"/login\");\n    await this.authService.signOut();\n  }\n\n  async presentModal() {\n    const modal = await this.modalController.create({\n      component: AddBookshelfComponent,\n      cssClass: \"modalCss\",\n      componentProps: {\n        userId: this.userId,\n      },\n    });\n    return await modal.present();\n  }\n\n  deleteBookshelf(bookShelfId: string): Promise<void> {\n    return this.angularFirestore.doc(`bookshelfs/${bookShelfId}`).delete();\n  }\n}\n","export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <ion-title class=\\\"ion-text-center\\\">Add a bookshelf</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"closeModal()\\\" class=\\\"button-text\\\">Close</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-list\\n    style=\\\"height: 100%; width: 100%\\\"\\n    lines=\\\"none\\\"\\n    class=\\\"ion-align-items-center ion-justify-content-center\\\"\\n  >\\n    <ion-item>\\n      <ion-label class=\\\"ion-text-center book-title\\\">Bookshelf Title</ion-label>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label class=\\\"label-text\\\" style=\\\"margin-top: 0px\\\">Name:</ion-label>\\n      <ion-input\\n        type=\\\"text\\\"\\n        class=\\\"review-text\\\"\\n        (ionChange)=\\\"changeName($event)\\\"\\n      ></ion-input>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar style=\\\"--background: rgba(var(--ion-color-success-rgb), 0.7)\\\">\\n    <ion-button expand=\\\"block\\\" fill=\\\"clear\\\" shape=\\\"round\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"button-text\\\">Create</span>\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-footer>\\n\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-item>\\n      <ion-avatar slot=\\\"start\\\">\\n        <img src=\\\"../assets/icon/profileIcon.svg\\\" />\\n      </ion-avatar>\\n      <ion-label class=\\\"profile-name\\\">{{ displayName }}</ion-label>\\n    </ion-item>\\n    <ion-item button slot=\\\"end\\\" (click)=\\\"authService.signOut()\\\">\\n      <ion-icon\\n        name=\\\"log-out-outline\\\"\\n        style=\\\"width: 30px; height: 30px\\\"\\n      ></ion-icon>\\n      <ion-label style=\\\"margin-left: 5px\\\" class=\\\"logout-text\\\">Logout</ion-label>\\n    </ion-item>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid class=\\\"ion-align-items-center ion-justify-content-center\\\">\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\n      <ion-card *ngIf=\\\"!books.length\\\">\\n        <ion-card-content>\\n          <ion-item>\\n            <ion-label><span>Collection is empty</span></ion-label>\\n          </ion-item>\\n        </ion-card-content>\\n      </ion-card>\\n      <ion-col\\n        size=\\\"12\\\"\\n        size-md=\\\"6\\\"\\n        size-lg=\\\"4\\\"\\n        style=\\\"width: 390px\\\"\\n        *ngFor=\\\"let book of books\\\"\\n      >\\n        <ion-card>\\n          <ion-card-header>\\n            <div class=\\\"ion-float-right ion-no-padding\\\">\\n              <ion-button (click)=\\\"openModal(book)\\\" fill=\\\"clear\\\" slot=\\\"end\\\">\\n                <ion-icon\\n                  slot=\\\"icon-only\\\"\\n                  name=\\\"star-sharp\\\"\\n                  style=\\\"color: rgba(var(--ion-color-warning-rgb), 0.85)\\\"\\n                ></ion-icon>\\n              </ion-button>\\n              <ion-button (click)=\\\"deleteBook(book.id)\\\" fill=\\\"clear\\\" slot=\\\"end\\\">\\n                <ion-icon\\n                  slot=\\\"icon-only\\\"\\n                  name=\\\"trash-sharp\\\"\\n                  style=\\\"color: rgba(var(--ion-color-danger-rgb), 0.85)\\\"\\n                >\\n                </ion-icon>\\n              </ion-button>\\n            </div>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label class=\\\"card-title ion-text-wrap\\\">{{\\n                book.title\\n              }}</ion-label>\\n            </ion-item>\\n          </ion-card-header>\\n          <ion-card-content\\n            class=\\\"\\n              ion-text-center\\n              ion-justify-content-between\\n              ion-align-center-center\\n            \\\"\\n          >\\n            <div\\n              style=\\\"width: 100px; height: 250px\\\"\\n              class=\\\"ion-float-left ion-align-items-center\\\"\\n            >\\n              <ion-img\\n                class=\\\"ion-float-left ion-align-self-center\\\"\\n                src=\\\"{{ book.cover }}\\\"\\n                style=\\\"width: 100px; height: 250px; margin-top: 10%\\\"\\n              ></ion-img>\\n            </div>\\n            <ion-list lines=\\\"none\\\">\\n              <ion-item>\\n                <ion-label\\n                  >Authors: <span>{{ book.authors }}</span></ion-label\\n                >\\n              </ion-item>\\n              <ion-item>\\n                <ion-label\\n                  >Publisher: <span>{{ book.publishers }}</span></ion-label\\n                >\\n              </ion-item>\\n              <ion-item>\\n                <ion-label\\n                  >Publish date: <span>{{ book.publish_date }}</span></ion-label\\n                >\\n              </ion-item>\\n              <ion-item>\\n                <ion-label\\n                  >Number of pages:\\n                  <span>{{ book.number_of_pages }}</span></ion-label\\n                >\\n              </ion-item>\\n              <ion-item>\\n                <ion-label\\n                  >ISBN: <span>{{ book.isbn }}</span></ion-label\\n                >\\n              </ion-item>\\n            </ion-list>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-item>\\n      <ion-avatar slot=\\\"start\\\">\\n        <img src=\\\"../assets/icon/profileIcon.svg\\\" />\\n      </ion-avatar>\\n      <ion-label class=\\\"profile-name\\\">{{displayName}}</ion-label>\\n    </ion-item>\\n    <ion-item button slot=\\\"end\\\" (click)=\\\"signOut()\\\">\\n      <ion-icon\\n        name=\\\"log-out-outline\\\"\\n        style=\\\"width: 30px; height: 30px\\\"\\n      ></ion-icon>\\n      <ion-label style=\\\"margin-left: 5px\\\" class=\\\"logout-text\\\">Logout</ion-label>\\n    </ion-item>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid class=\\\"ion-align-items-center ion-justify-content-center\\\">\\n    <ion-row class=\\\"ion-align-items-center\\\">\\n      <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\"\\n        ><ion-button\\n          (click)=\\\"presentModal()\\\"\\n          class=\\\"ion-justify-content-center add-button\\\"\\n        >\\n          <ion-icon slot=\\\"start\\\" name=\\\"add\\\"></ion-icon>\\n          Add a bookshelf\\n        </ion-button></ion-col\\n      >\\n    </ion-row>\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\n      <ion-card *ngIf=\\\"!booksShelves.length\\\">\\n        <ion-card-content>\\n          <ion-item>\\n            <ion-label><span>Collection is empty</span></ion-label>\\n          </ion-item>\\n        </ion-card-content>\\n      </ion-card>\\n      <ion-col\\n        size=\\\"12\\\"\\n        size-md=\\\"6\\\"\\n        size-lg=\\\"4\\\"\\n        style=\\\"width: 390px\\\"\\n        *ngFor=\\\"let bookShelf of booksShelves\\\"\\n      >\\n        <ion-card>\\n          <ion-card-header>\\n            <ion-img\\n              class=\\\"ion-float-left ion-align-self-center\\\"\\n              src=\\\"./assets/icon/bookshelfCard.svg\\\"\\n              style=\\\"width: 100px; height: 200px\\\"\\n            ></ion-img>\\n            <div class=\\\"ion-float-right ion-no-padding\\\">\\n              <ion-button\\n                (click)=\\\"deleteBookshelf(bookShelf.id)\\\"\\n                fill=\\\"clear\\\"\\n                slot=\\\"end\\\"\\n              >\\n                <ion-icon\\n                  slot=\\\"icon-only\\\"\\n                  name=\\\"trash-sharp\\\"\\n                  style=\\\"color: rgba(var(--ion-color-danger-rgb), 0.85)\\\"\\n                >\\n                </ion-icon>\\n              </ion-button>\\n            </div>\\n          </ion-card-header>\\n          <ion-card-content\\n            class=\\\"\\n              ion-text-center\\n              ion-justify-content-between\\n              ion-align-center-center\\n            \\\"\\n          >\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label class=\\\"card-title ion-text-wrap\\\"\\n                >{{bookShelf.name}}</ion-label\\n              >\\n            </ion-item>\\n          </ion-card-content>\\n          <div class=\\\"ion-justify-content-center\\\">\\n            <ion-button\\n              [routerLink]=\\\"['book-list', bookShelf.id]\\\"\\n              fill=\\\"solid\\\"\\n              class=\\\"open-button\\\"\\n            >\\n              Open\\n              <ion-icon name=\\\"open-outline\\\" style=\\\"margin-left: 5px\\\"></ion-icon>\\n            </ion-button>\\n          </div>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n    <ion-fab-button>\\n      <ion-icon name=\\\"search-outline\\\"></ion-icon>\\n    </ion-fab-button>\\n    <ion-fab-list side=\\\"top\\\">\\n      <ion-fab-button class=\\\"search-list\\\" [routerLink]=\\\"['../../book-search']\\\">\\n        <ion-icon name=\\\"book\\\"></ion-icon>\\n      </ion-fab-button>\\n      <ion-fab-button\\n        class=\\\"search-list\\\"\\n        [routerLink]=\\\"['../../review-search']\\\"\\n      >\\n        <ion-icon name=\\\"star\\\"></ion-icon>\\n      </ion-fab-button>\\n      <ion-fab-button class=\\\"search-list\\\" [routerLink]=\\\"['../../user-search']\\\">\\n        <ion-icon name=\\\"person\\\"></ion-icon>\\n      </ion-fab-button>\\n    </ion-fab-list>\\n  </ion-fab>\\n</ion-content>\\n\";"]}