{"version":3,"mappings":"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","names":["UserSearchBookListComponent","authService","navParams","angularFirestore","router","navCtrl","modalController","bookShelfId","get","title","displayName","localStorage","getItem","collection","snapshotChanges","subscribe","books","map","t","Object","id","payload","doc","data","filter","navigateRoot","signOut","close","dismiss","_services_authentication_service__WEBPACK_IMPORTED_MODULE_2__","_ionic_angular__WEBPACK_IMPORTED_MODULE_4__","_angular_fire_firestore__WEBPACK_IMPORTED_MODULE_5__","_angular_router__WEBPACK_IMPORTED_MODULE_6__","selector","template","UserSearchDetailsComponent","activatedRoute","userId","snapshot","paramMap","booksShelves","review","reviews","bookShelf","create","component","_user_search_book_list_user_search_book_list_component__WEBPACK_IMPORTED_MODULE_3__","componentProps","bookshelfId","name","modal","present","ev","segment","target","value","_angular_router__WEBPACK_IMPORTED_MODULE_5__","_angular_fire_firestore__WEBPACK_IMPORTED_MODULE_6__","_ionic_angular__WEBPACK_IMPORTED_MODULE_7__","routes","path","_user_search_page__WEBPACK_IMPORTED_MODULE_2__","_user_search_details_user_search_details_component__WEBPACK_IMPORTED_MODULE_1__","_user_search_book_list_user_search_book_list_component__WEBPACK_IMPORTED_MODULE_0__","UserSearchPageRoutingModule","imports","exports","UserSearchPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_7__","_angular_forms__WEBPACK_IMPORTED_MODULE_8__","_ionic_angular__WEBPACK_IMPORTED_MODULE_9__","_user_search_routing_module__WEBPACK_IMPORTED_MODULE_3__","declarations","_user_search_page__WEBPACK_IMPORTED_MODULE_4__","_pipes_filter_pipe__WEBPACK_IMPORTED_MODULE_0__","_user_search_details_user_search_details_component__WEBPACK_IMPORTED_MODULE_2__","_user_search_book_list_user_search_book_list_component__WEBPACK_IMPORTED_MODULE_1__","UserSearchPage","pipe","users","searchTerm","filtered","includes","navigate","_angular_fire_firestore__WEBPACK_IMPORTED_MODULE_3__","_angular_router__WEBPACK_IMPORTED_MODULE_4__","__webpack_exports__"],"sources":["webpack:///src/app/pages/user-search/user-search-book-list/user-search-book-list.component.ts","webpack:///src/app/pages/user-search/user-search-details/user-search-details.component.ts","webpack:///src/app/pages/user-search/user-search-routing.module.ts","webpack:///src/app/pages/user-search/user-search.module.ts","webpack:///src/app/pages/user-search/user-search.page.ts","webpack:///src/app/pages/user-search/user-search-book-list/user-search-book-list.component.html","webpack:///src/app/pages/user-search/user-search-details/user-search-details.component.html","webpack:///src/app/pages/user-search/user-search.page.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Router } from '@angular/router';\nimport { ModalController, NavController, NavParams } from '@ionic/angular';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { Book } from '../../../services/firestore.service';\n\n@Component({\n  selector: 'app-user-search-book-list',\n  templateUrl: './user-search-book-list.component.html',\n  styleUrls: ['./user-search-book-list.component.scss']\n})\nexport class UserSearchBookListComponent {\n  public displayName: string;\n  public bookShelfId: string;\n  public title: string;\n  public books: Book[];\n\n  constructor(\n    public authService: AuthenticationService,\n    private navParams: NavParams,\n    private angularFirestore: AngularFirestore,\n    private router: Router,\n    private navCtrl: NavController,\n    private modalController: ModalController\n  ) {\n    this.bookShelfId = this.navParams.get('bookshelfId');\n    this.title = this.navParams.get('title');\n  }\n\n  ionViewWillEnter() {\n    this.displayName = localStorage.getItem('currentUserDisplayName');\n\n    this.angularFirestore.collection('books').snapshotChanges().subscribe((books) => {\n      this.books = books\n        .map((t) => ({\n          id: t.payload.doc.id,\n          ...t.payload.doc.data() as Book\n        }))\n        .filter(t => t.bookShelfId === this.bookShelfId);\n    });\n  }\n\n  public async signOut(): Promise<void> {\n    await this.navCtrl.navigateRoot('/login');\n    await this.authService.signOut();\n  }\n\n  public async closeModal(): Promise<void> {\n    const close = 'Modal Removed';\n    await this.modalController.dismiss(close);\n  }\n}\n","import { Component } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ModalController, NavController } from '@ionic/angular';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { Bookshelf } from '../../../services/firestore.service';\nimport { Review } from '../../review/review.page';\nimport { UserSearchBookListComponent } from '../user-search-book-list/user-search-book-list.component';\n\n@Component({\n  selector: 'app-user-search-details',\n  templateUrl: './user-search-details.component.html',\n  styleUrls: ['./user-search-details.component.scss']\n})\nexport class UserSearchDetailsComponent {\n  public userId: string;\n  public booksShelves: Bookshelf[];\n  public reviews: Review[];\n  public displayName: string;\n  public segment = 'bookshelves';\n\n  constructor(\n    public authService: AuthenticationService,\n    private activatedRoute: ActivatedRoute,\n    private angularFirestore: AngularFirestore,\n    private router: Router,\n    private navCtrl: NavController,\n    private modalController: ModalController\n  ) {\n    this.userId = this.activatedRoute.snapshot.paramMap.get('id');\n  }\n\n  ionViewWillEnter() {\n    this.displayName = localStorage.getItem('currentUserDisplayName');\n\n    this.angularFirestore.collection('bookshelfs').snapshotChanges().subscribe((books) => {\n      this.booksShelves = books\n        .map((t) => ({\n          id: t.payload.doc.id,\n          ...t.payload.doc.data() as Bookshelf\n        }))\n        .filter(t => t.userId === this.userId);\n    });\n\n    this.angularFirestore.collection('stars').snapshotChanges().subscribe((review) => {\n      this.reviews = review\n        .map((t) => ({\n          id: t.payload.doc.id,\n          ...t.payload.doc.data() as Review\n        }))\n        .filter(t => t.userId === this.userId);\n    });\n  }\n\n  public async presentModal(bookShelf: Bookshelf): Promise<void> {\n    const modal = await this.modalController.create({\n      component: UserSearchBookListComponent,\n      componentProps: {\n        bookshelfId: bookShelf.id,\n        title: bookShelf.name\n      }\n    });\n    return await modal.present();\n  }\n\n  public segmentChanged(ev: any) {\n    this.segment = ev.target.value;\n  }\n\n  public async signOut(): Promise<void> {\n    await this.navCtrl.navigateRoot('/login');\n    await this.authService.signOut();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserSearchBookListComponent } from './user-search-book-list/user-search-book-list.component';\nimport { UserSearchDetailsComponent } from './user-search-details/user-search-details.component';\nimport { UserSearchPage } from './user-search.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserSearchPage\n  },{\n    path: 'user-bookshelves/:id',\n    component: UserSearchDetailsComponent\n  },{\n    path: 'user-book-list/:id',\n    component: UserSearchBookListComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserSearchPageRoutingModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\n\nimport { FilterPipe } from '../../pipes/filter.pipe';\nimport { UserSearchBookListComponent } from './user-search-book-list/user-search-book-list.component';\nimport { UserSearchDetailsComponent } from './user-search-details/user-search-details.component';\nimport { UserSearchPageRoutingModule } from './user-search-routing.module';\nimport { UserSearchPage } from './user-search.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UserSearchPageRoutingModule\n  ],\n  declarations: [UserSearchPage, FilterPipe, UserSearchDetailsComponent, UserSearchBookListComponent]\n})\nexport class UserSearchPageModule {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Router } from '@angular/router';\nimport { User } from '../../shared/auth';\n\n@Component({\n  selector: 'app-user-search.page',\n  templateUrl: './user-search.page.html',\n  styleUrls: ['./user-search.page.scss']\n})\nexport class UserSearchPage implements OnInit {\n  public bookShelves: User[];\n  public users: User[];\n  public filtered: User[];\n  public searchTerm: string;\n\n  constructor(\n    private angularFirestore: AngularFirestore,\n    private router: Router\n  ) {\n  }\n\n  public ngOnInit(): void {\n  }\n\n  ionViewWillEnter() {\n    this.angularFirestore\n      .collection('users')\n      .snapshotChanges()\n      .pipe()\n      .subscribe((users) => {\n        this.users = users\n          .map((t) => ({\n            id: t.payload.doc.id,\n            ...t.payload.doc.data() as User\n          }));\n      });\n  }\n\n  public changeSearchCriteria(searchTerm: string): void {\n    this.filtered = this.users.filter(t => searchTerm !== '' && t.displayName.includes(searchTerm));\n  }\n\n  public async goToUser(userId: string): Promise<void> {\n    await this.router.navigate(['user-bookshelves', userId]);\n  }\n}\n","export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <ion-title class=\\\"ion-text-center title-text\\\">{{ title }}</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"closeModal()\\\" class=\\\"button-text\\\">Close</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid class=\\\"ion-align-items-center ion-justify-content-center\\\">\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\n      <!-- tot ce e in ion-col e template-ul pentru afisarea cartilor -->\\n      <ion-col size=\\\"12\\\" size-md=\\\"6\\\" size-lg=\\\"4\\\" style=\\\"width: 390px\\\">\\n        <ion-card *ngFor=\\\"let book of books\\\">\\n          <ion-card-header>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label class=\\\"card-title ion-text-wrap\\\">{{\\n                book.title\\n              }}</ion-label>\\n            </ion-item>\\n          </ion-card-header>\\n          <ion-card-content\\n            class=\\\"\\n              ion-text-center\\n              ion-justify-content-between\\n              ion-align-center-center\\n            \\\"\\n          >\\n            <div\\n              style=\\\"width: 100px; height: 250px\\\"\\n              class=\\\"ion-float-left ion-align-items-center\\\"\\n            >\\n              <ion-img\\n                class=\\\"ion-float-left ion-align-self-center\\\"\\n                src=\\\"{{ book.cover }}\\\"\\n                style=\\\"width: 100px; height: 250px; margin-top: 10%\\\"\\n              ></ion-img>\\n            </div>\\n            <ion-list lines=\\\"none\\\">\\n              <ion-item>\\n                <ion-label\\n                  >Authors: <span>{{ book.authors }}</span></ion-label\\n                >\\n              </ion-item>\\n              <ion-item>\\n                <ion-label\\n                  >Publisher: <span>{{ book.publishers }}</span></ion-label\\n                >\\n              </ion-item>\\n              <ion-item>\\n                <ion-label\\n                  >Publish date: <span>{{ book.publish_date }}</span></ion-label\\n                >\\n              </ion-item>\\n              <ion-item>\\n                <ion-label\\n                  >Number of pages:\\n                  <span>{{ book.number_of_pages }}</span></ion-label\\n                >\\n              </ion-item>\\n              <ion-item>\\n                <ion-label\\n                  >ISBN: <span>{{ book.isbn }}</span></ion-label\\n                >\\n              </ion-item>\\n            </ion-list>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-item>\\n      <ion-avatar slot=\\\"start\\\">\\n        <img src=\\\"../assets/icon/profileIcon.svg\\\" />\\n      </ion-avatar>\\n      <ion-label class=\\\"profile-name\\\">{{ displayName }}</ion-label>\\n    </ion-item>\\n    <ion-item button slot=\\\"end\\\" (click)=\\\"signOut()\\\">\\n      <ion-icon\\n        name=\\\"log-out-outline\\\"\\n        style=\\\"width: 30px; height: 30px\\\"\\n      ></ion-icon>\\n      <ion-label style=\\\"margin-left: 5px\\\" class=\\\"logout-text\\\">Logout</ion-label>\\n    </ion-item>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-segment (ionChange)=\\\"segmentChanged($event)\\\">\\n    <ion-segment-button value=\\\"bookshelves\\\">\\n      <ion-label>Bookshelves</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button value=\\\"reviews\\\">\\n      <ion-label>Reviews</ion-label>\\n    </ion-segment-button>\\n  </ion-segment>\\n  <ion-grid\\n    *ngIf=\\\"segment === 'bookshelves'\\\"\\n    class=\\\"ion-align-items-center ion-justify-content-center\\\"\\n  >\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\n      <ion-col\\n        size=\\\"12\\\"\\n        size-md=\\\"6\\\"\\n        size-lg=\\\"4\\\"\\n        style=\\\"width: 390px\\\"\\n        *ngFor=\\\"let bookShelf of booksShelves\\\"\\n        class=\\\"bookshelves-card\\\"\\n      >\\n        <ion-card>\\n          <ion-card-header>\\n            <ion-img\\n              class=\\\"ion-float-left ion-align-self-center\\\"\\n              src=\\\"./assets/icon/bookshelfCard.svg\\\"\\n              style=\\\"width: 100px; height: 200px\\\"\\n            ></ion-img>\\n          </ion-card-header>\\n          <ion-card-content\\n            class=\\\"\\n              ion-text-center\\n              ion-justify-content-between\\n              ion-align-center-center\\n            \\\"\\n          >\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label class=\\\"bookshelf-title ion-text-wrap\\\">{{\\n                bookShelf.name\\n              }}</ion-label>\\n            </ion-item>\\n          </ion-card-content>\\n          <div class=\\\"ion-justify-content-center\\\">\\n            <ion-button\\n              (click)=\\\"presentModal(bookShelf)\\\"\\n              fill=\\\"solid\\\"\\n              class=\\\"open-button\\\"\\n            >\\n              Open\\n              <ion-icon name=\\\"open-outline\\\" style=\\\"margin-left: 5px\\\"></ion-icon>\\n            </ion-button>\\n          </div>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n  <ion-grid\\n    *ngIf=\\\"segment === 'reviews'\\\"\\n    class=\\\"ion-align-items-center ion-justify-content-center\\\"\\n  >\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\n      <ion-col\\n        size=\\\"12\\\"\\n        size-md=\\\"6\\\"\\n        size-lg=\\\"4\\\"\\n        style=\\\"width: 390px\\\"\\n        *ngFor=\\\"let review of reviews\\\"\\n        class=\\\"reviews-card\\\"\\n      >\\n        <ion-card>\\n          <ion-card-header>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-label class=\\\"review-title ion-text-wrap\\\">{{\\n                review.title\\n              }}</ion-label>\\n            </ion-item>\\n            <ion-card-subtitle>{{ review.bookAuthors }}</ion-card-subtitle>\\n          </ion-card-header>\\n          <ion-card-content\\n            class=\\\"\\n              ion-text-center ion-justify-content-between ion-align-items-center\\n            \\\"\\n          >\\n            <div\\n              style=\\\"width: 100px; height: 250px\\\"\\n              class=\\\"ion-float-left ion-align-items-center\\\"\\n            >\\n              <ion-img\\n                class=\\\"ion-align-items-center\\\"\\n                src=\\\"{{ review.cover }}\\\"\\n                style=\\\"\\n                  width: 100px;\\n                  height: 250px;\\n                  margin-bottom: 20%;\\n                  display: inline-block;\\n                \\\"\\n              ></ion-img>\\n            </div>\\n            <ion-list lines=\\\"none\\\">\\n              <ion-item class=\\\"review-text\\\"> {{ review.text }} </ion-item>\\n              <ion-item>\\n                <ion-label> Rating: {{ review.rating }} / 5</ion-label>\\n              </ion-item>\\n            </ion-list>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title class=\\\"title-text\\\">Search for users</ion-title>\\n  </ion-toolbar>\\n  <ion-grid fixed>\\n    <ion-row>\\n      <ion-col\\n        size=\\\"12\\\"\\n        class=\\\"ion-align-items-center ion-justify-content-center\\\"\\n      >\\n        <ion-searchbar\\n          showCancelButton=\\\"never\\\"\\n          placeholder=\\\"Filter by display name\\\"\\n          [ngModel]=\\\"searchTerm\\\"\\n          (ngModelChange)=\\\"changeSearchCriteria($event)\\\"\\n          animated\\n          [debounce]=\\\"500\\\"\\n        ></ion-searchbar>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid class=\\\"ion-align-items-center ion-justify-content-center\\\">\\n    <ion-row class=\\\"ion-justify-content-center\\\">\\n      <ion-col\\n        size=\\\"12\\\"\\n        size-md=\\\"6\\\"\\n        size-lg=\\\"4\\\"\\n        style=\\\"width: 390px\\\"\\n        *ngFor=\\\"let user of filtered\\\"\\n      >\\n        <ion-card>\\n          <ion-card-content\\n            class=\\\"ion-justify-content-center ion-align-center-center\\\"\\n          >\\n            <ion-list lines=\\\"none\\\" class=\\\"ion-text-center\\\">\\n              <ion-item class=\\\"ion-text-center\\\">\\n                <ion-img\\n                  class=\\\"ion-float-left ion-align-self-center ion-text-center\\\"\\n                  src=\\\"./assets/icon/userSearchIcon2.svg\\\"\\n                ></ion-img>\\n                <ion-label class=\\\"ion-text-left\\\"\\n                  ><span>{{user.displayName}}</span></ion-label\\n                >\\n                <ion-button\\n                  [routerLink]=\\\"['user-bookshelves', user.uid]\\\"\\n                  fill=\\\"clear\\\"\\n                  slot=\\\"end\\\"\\n                >\\n                  <ion-icon\\n                    slot=\\\"icon-only\\\"\\n                    name=\\\"eye-outline\\\"\\n                    style=\\\"\\n                      color: rgba(var(--ion-color-secondary-rgb), 0.7);\\n                      font-size: 30px;\\n                    \\\"\\n                  >\\n                  </ion-icon>\\n                </ion-button>\\n              </ion-item>\\n            </ion-list>\\n          </ion-card-content>\\n        </ion-card>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</ion-content>\\n\";"]}