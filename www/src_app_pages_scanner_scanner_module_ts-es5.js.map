{"version":3,"mappings":"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","names":["routes","path","component","_scanner_page__WEBPACK_IMPORTED_MODULE_0__","ScannerPageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","ScannerPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","_ionic_angular__WEBPACK_IMPORTED_MODULE_6__","_scanner_routing_module__WEBPACK_IMPORTED_MODULE_0__","declarations","_scanner_page__WEBPACK_IMPORTED_MODULE_1__","ScannerPage","alertController","angularFirestore","afs","pickerController","modalController","title","authors","publishers","publish_date","number_of_pages","cover","isbn","bookShelfId","createdAt","Date","rxjs__WEBPACK_IMPORTED_MODULE_6__","_capacitor_community_barcode_scanner__WEBPACK_IMPORTED_MODULE_2__","subscriptions","unsubscribe","result","resultHasContent","user","JSON","parse","localStorage","getItem","sub","collection","snapshotChanges","subscribe","bookshelfs","booksShelves","map","t","Object","id","payload","doc","data","bookshelf","userId","name","filter","uid","add","options","buttons","text","role","handler","value","selectBookShelfTitle","Bookshelfs","columns","getColumnOptions","create","picker","present","_bookshelf_add_book_modal_add_book_modal_component__WEBPACK_IMPORTED_MODULE_4__","cssClass","componentProps","modal","forEach","x","push","showPicker","checkPermission","allowed","scanActive","document","body","classList","remove","hasContent","content","fetch","response","json","index","length","undefined","hasOwnProperty","medium","currentBook","Promise","resolve","reject","force","status","granted","denied","header","message","alert","addBook","_capacitor_toast__WEBPACK_IMPORTED_MODULE_5__","_ionic_angular__WEBPACK_IMPORTED_MODULE_8__","_angular_fire_firestore__WEBPACK_IMPORTED_MODULE_9__","_services_firestore_service__WEBPACK_IMPORTED_MODULE_3__","selector","template","__webpack_exports__"],"sources":["webpack:///src/app/pages/scanner/scanner-routing.module.ts","webpack:///src/app/pages/scanner/scanner.module.ts","webpack:///src/app/pages/scanner/scanner.page.ts","webpack:///src/app/pages/scanner/scanner.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ScannerPage } from './scanner.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ScannerPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ScannerPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ScannerPageRoutingModule } from './scanner-routing.module';\n\nimport { ScannerPage } from './scanner.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ScannerPageRoutingModule\n  ],\n  declarations: [ScannerPage]\n})\nexport class ScannerPageModule {}\n","import { AfterViewInit, Component, OnDestroy } from \"@angular/core\";\nimport { AngularFirestore } from \"@angular/fire/firestore\";\nimport { BarcodeScanner } from \"@capacitor-community/barcode-scanner\";\nimport {\n  AlertController,\n  ModalController,\n  PickerController,\n  PickerOptions,\n} from \"@ionic/angular\";\nimport { Subscription } from \"rxjs\";\nimport {\n  Book,\n  Bookshelf,\n  FirestoreService,\n} from \"../../services/firestore.service\";\nimport { User } from \"../../shared/auth\";\nimport { AddBookModalComponent } from \"../bookshelf/add-book-modal/add-book-modal.component\";\nimport { Toast } from \"@capacitor/toast\";\n\n@Component({\n  selector: \"app-scanner\",\n  templateUrl: \"./scanner.page.html\",\n  styleUrls: [\"./scanner.page.scss\"],\n})\nexport class ScannerPage implements AfterViewInit, OnDestroy {\n  public booksShelves: Bookshelf[];\n  public selectBookShelfTitle = \"Select bookshelf\";\n  result = null;\n  resultHasContent = false;\n  scanActive = false;\n  title = null;\n  authors = null;\n  publishers = null;\n  publish_date = null;\n  number_of_pages = null;\n  cover = null;\n  isbn = null;\n  bookShelfId: string = null;\n\n  currentBook: Book = {\n    title: this.title,\n    authors: this.authors,\n    publishers: this.publishers,\n    publish_date: this.publish_date,\n    number_of_pages: this.number_of_pages,\n    cover: this.cover,\n    isbn: this.isbn,\n    bookShelfId: this.bookShelfId,\n    createdAt: new Date(),\n  };\n\n  public subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private alertController: AlertController,\n    private angularFirestore: AngularFirestore,\n    private afs: FirestoreService,\n    private pickerController: PickerController,\n    private modalController: ModalController\n  ) {}\n\n  ngAfterViewInit() {\n    BarcodeScanner.prepare();\n  }\n\n  ngOnDestroy() {\n    BarcodeScanner.stopScan();\n    this.subscriptions.unsubscribe();\n  }\n\n  ionViewWillEnter() {\n    this.result = null;\n    this.resultHasContent = false;\n\n    this.title = null;\n    this.authors = null;\n    this.publishers = null;\n    this.publish_date = null;\n    this.number_of_pages = null;\n    this.cover = null;\n    this.isbn = null;\n\n    const user = JSON.parse(localStorage.getItem(\"user\")) as User;\n\n    if (user) {\n      const sub = this.angularFirestore\n        .collection(\"bookshelfs\")\n        .snapshotChanges()\n        .subscribe((bookshelfs) => {\n          this.booksShelves = bookshelfs\n            .map((t) => ({\n              id: t.payload.doc.id,\n              ...(t.payload.doc.data() as Bookshelf),\n            }))\n            .map(\n              (bookshelf) =>\n                ({\n                  id: bookshelf.id,\n                  userId: bookshelf.userId,\n                  name: bookshelf.name,\n                } as Bookshelf)\n            )\n            .filter((t) => t.userId === user.uid);\n        });\n      this.subscriptions.add(sub);\n    }\n  }\n\n  async showPicker() {\n    const options: PickerOptions = {\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n        },\n        {\n          text: \"Ok\",\n          handler: (value: any) => {\n            this.selectBookShelfTitle = value.Bookshelfs.text;\n            this.bookShelfId = value.Bookshelfs.value;\n          },\n        },\n      ],\n      columns: [\n        {\n          name: \"Bookshelfs\",\n          options: this.getColumnOptions(),\n        },\n      ],\n    };\n\n    const picker = await this.pickerController.create(options);\n    picker.present();\n  }\n\n  async presentModal() {\n    const modal = await this.modalController.create({\n      component: AddBookModalComponent,\n      cssClass: \"modalCss\",\n      componentProps: {\n        bookShelfId: this.bookShelfId,\n      },\n    });\n    return await modal.present();\n  }\n\n  getColumnOptions() {\n    const options = [];\n    this.booksShelves.forEach((x) => {\n      options.push({ text: x.name, value: x.id });\n    });\n    return options;\n  }\n\n  async selectBookShelf() {\n    await this.showPicker();\n  }\n\n  async startScanner() {\n    this.title = null;\n    this.authors = null;\n    this.publishers = null;\n    this.publish_date = null;\n    this.number_of_pages = null;\n    this.cover = null;\n    this.isbn = null;\n\n    const allowed = await this.checkPermission();\n    if (allowed) {\n      this.scanActive = true;\n      document.body.classList.add(\"qrscanner\"); // add the qrscanner class to body\n      BarcodeScanner.hideBackground();\n      const result = await BarcodeScanner.startScan();\n      document.body.classList.remove(\"qrscanner\"); // remove the qrscanner from the body\n\n      if (result.hasContent) {\n        this.result = result.content;\n        this.resultHasContent = true;\n        this.scanActive = false;\n        this.isbn = this.result;\n        const response = await fetch(\n          \"https://openlibrary.org/api/books?bibkeys=ISBN:\" +\n            this.result +\n            \"&jscmd=data&format=json\"\n        );\n        const data = await response.json();\n        //Title of the book\n        this.title = data[\"ISBN:\" + this.result].title;\n        //Authors, implementation for multiple\n        this.authors = data[\"ISBN:\" + this.result].authors[0].name;\n        for (\n          let index = 1;\n          index < data[\"ISBN:\" + this.result].authors.length;\n          index++\n        ) {\n          this.authors =\n            this.authors +\n            \" \" +\n            data[\"ISBN:\" + this.result].authors[index].name +\n            \" \";\n        }\n\n        //Publisher\n        this.publishers = data[\"ISBN:\" + this.result].publishers[0].name;\n\n        //Publish date\n        this.publish_date = data[\"ISBN:\" + this.result].publish_date;\n\n        //Number of pages\n        if (data[\"ISBN:\" + this.result].number_of_pages !== undefined) {\n          this.number_of_pages = data[\"ISBN:\" + this.result].number_of_pages;\n        } else {\n          this.number_of_pages = \"\";\n        }\n        //Book cover\n        if (data[\"ISBN:\" + this.result].hasOwnProperty(\"cover\")) {\n          this.cover = data[\"ISBN:\" + this.result].cover.medium;\n        } else {\n          this.cover = \"./assets/icon/bookCoverError.svg\";\n        }\n\n        this.currentBook.authors = this.authors;\n        this.currentBook.cover = this.cover;\n        this.currentBook.isbn = this.isbn;\n        this.currentBook.number_of_pages = this.number_of_pages;\n        this.currentBook.publish_date = this.publish_date;\n        this.currentBook.publishers = this.publishers;\n        this.currentBook.title = this.title;\n        this.currentBook.bookShelfId = this.bookShelfId;\n        this.currentBook.createdAt = new Date();\n      }\n    }\n  }\n\n  async checkPermission() {\n    return new Promise(async (resolve, reject) => {\n      const status = await BarcodeScanner.checkPermission({ force: true });\n      if (status.granted) {\n        resolve(true);\n      } else if (status.denied) {\n        const alert = await this.alertController.create({\n          header: \"No permission\",\n          message: \"Please allow camera access in your settings\",\n          buttons: [\n            {\n              text: \"No\",\n              role: \"cancel\",\n            },\n            {\n              text: \"Open Settings\",\n              handler: () => {\n                resolve(false);\n                BarcodeScanner.openAppSettings();\n              },\n            },\n          ],\n        });\n\n        await alert.present();\n      } else {\n        resolve(false);\n      }\n    });\n  }\n\n  stopScanner() {\n    document.body.classList.remove(\"qrscanner\"); // remove the qrscanner from the body\n    BarcodeScanner.stopScan();\n    this.scanActive = false;\n  }\n\n  public async addBook(): Promise<void> {\n    await this.afs.addBook(this.currentBook);\n    Toast.show({\n      text: \"Book was successfully added to your bookshelf!\",\n    });\n  }\n}\n","export default \"<ion-header [hidden]=\\\"scanActive\\\" class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <ion-icon\\n      src=\\\"./assets/icon/bookLogo.svg\\\"\\n      class=\\\"logo-large\\\"\\n      slot=\\\"end\\\"\\n    ></ion-icon>\\n    <ion-title class=\\\"title-text\\\">ISBN Scanner</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content\\n  [style.--background]=\\\"scanActive ? 'rgba(255,255,255,0.3)' : '#121212'\\\"\\n>\\n  <ion-row class=\\\"scanner-buttons ion-align-items-center\\\" [hidden]=\\\"scanActive\\\">\\n    <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\n      <ion-button\\n        (click)=\\\"selectBookShelf()\\\"\\n        expand=\\\"block\\\"\\n        shape=\\\"round\\\"\\n        style=\\\"\\n          --background: rgba(var(--ion-color-success-rgb), 0.7);\\n          margin-bottom: 10px;\\n        \\\"\\n      >\\n        <span class=\\\"button-text\\\">{{selectBookShelfTitle}}</span>\\n      </ion-button>\\n      <ion-button\\n        (click)=\\\"presentModal()\\\"\\n        expand=\\\"block\\\"\\n        shape=\\\"round\\\"\\n        [disabled]=\\\"bookShelfId === null\\\"\\n        style=\\\"\\n          --background: rgba(var(--ion-color-success-rgb), 0.7);\\n          margin-bottom: 10px;\\n        \\\"\\n      >\\n        <span class=\\\"button-text\\\">Enter manually</span>\\n      </ion-button>\\n      <ion-button\\n        (click)=\\\"startScanner()\\\"\\n        expand=\\\"block\\\"\\n        shape=\\\"round\\\"\\n        [disabled]=\\\"bookShelfId === null\\\"\\n        [hidden]=\\\"scanActive\\\"\\n        style=\\\"\\n          --background: rgba(var(--ion-color-success-rgb), 0.7);\\n          margin-bottom: 10px;\\n        \\\"\\n      >\\n        <span class=\\\"button-text\\\">Start scanning</span>\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n  <div\\n    class=\\\"div-center\\\"\\n    *ngIf=\\\"resultHasContent && !scanActive else firstOpen\\\"\\n  >\\n    <ion-card class=\\\"card-style\\\">\\n      <ion-card-header>\\n        <ion-card-title class=\\\"ion-text-center\\\">{{ title }}</ion-card-title>\\n      </ion-card-header>\\n      <div class=\\\"div-center\\\">\\n        <ion-card-content class=\\\"ion-align-self-center\\\" style=\\\"width: 350px\\\">\\n          <ion-img src=\\\"{{ cover }}\\\"></ion-img>\\n          <div>\\n            <ion-list lines=\\\"none\\\">\\n              <ion-item>\\n                <ion-label class=\\\"ion-text-wrap\\\">\\n                  Authors:\\n                  <span> {{ authors }} </span>\\n                </ion-label>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label class=\\\"ion-text-wrap\\\"\\n                  >Publisher: <span> {{ publishers }} </span></ion-label\\n                >\\n              </ion-item>\\n              <ion-item>\\n                <ion-label class=\\\"ion-text-wrap\\\"\\n                  >Publish date: <span> {{ publish_date }} </span></ion-label\\n                >\\n              </ion-item>\\n              <ion-item>\\n                <ion-label class=\\\"ion-text-wrap\\\"\\n                  >Number of pages:\\n                  <span> {{ number_of_pages }} </span></ion-label\\n                >\\n              </ion-item>\\n              <ion-item>\\n                <ion-label class=\\\"ion-text-wrap\\\"\\n                  >ISBN: <span> {{ isbn }} </span></ion-label\\n                >\\n              </ion-item>\\n            </ion-list>\\n          </div>\\n          <ion-button (click)=\\\"addBook()\\\" expand=\\\"block\\\" shape=\\\"round\\\">\\n            <span class=\\\"button-text\\\">Add book to bookshelf </span>\\n          </ion-button>\\n        </ion-card-content>\\n      </div>\\n    </ion-card>\\n  </div>\\n\\n  <ng-template #firstOpen>\\n    <div class=\\\"div-center\\\" [hidden]=\\\"scanActive\\\">\\n      <ion-grid fixed style=\\\"margin-bottom: 30px\\\">\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-icon\\n              src=\\\"./assets/icon/bookCard.svg\\\"\\n              class=\\\"card-icon\\\"\\n            ></ion-icon>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\" class=\\\"firstTitle\\\"\\n            >Scanning a book is easy!\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\" class=\\\"firstSubtitle\\\"\\n            >Select a bookshelf and make sure to allign your book barcode with\\n            the highlight box. Try to keep it steady!\\n            <ion-icon\\n              src=\\\"./assets/icon/bookCard.svg\\\"\\n              class=\\\"logo-large\\\"\\n              slot=\\\"end\\\"\\n            ></ion-icon>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </div>\\n  </ng-template>\\n</ion-content>\\n<ion-row class=\\\"scanner-buttons ion-align-items-center\\\" [hidden]=\\\"!scanActive\\\">\\n  <ion-col size=\\\"12\\\" class=\\\"ion-no-padding ion-text-center\\\">\\n    <ion-button\\n      (click)=\\\"stopScanner()\\\"\\n      expand=\\\"block\\\"\\n      shape=\\\"round\\\"\\n      style=\\\"--background: rgba(var(--ion-color-danger-rgb), 0.7)\\\"\\n    >\\n      <span class=\\\"button-text\\\">Stop scanning</span>\\n    </ion-button>\\n  </ion-col>\\n</ion-row>\\n<div class=\\\"scanner-ui\\\" [hidden]=\\\"!scanActive\\\"></div>\\n\";"]}